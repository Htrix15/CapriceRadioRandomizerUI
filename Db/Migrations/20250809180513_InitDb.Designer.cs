// <auto-generated />
using Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Db.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250809180513_InitDb")]
    partial class InitDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("Infrastructure.Models.Genre", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsLastChoice")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsSkip")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ItIsParent")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("ParentGenreKey")
                        .HasColumnType("TEXT");

                    b.Property<int>("Rating")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RatingCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TrackCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("Key");

                    b.HasIndex("ParentGenreKey");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("Infrastructure.Models.RemoteSources", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("PlayLink")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("TrackInfoBaseLink")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Key");

                    b.ToTable("RemoteSources");
                });

            modelBuilder.Entity("Infrastructure.Models.Genre", b =>
                {
                    b.HasOne("Infrastructure.Models.Genre", "ParentGenre")
                        .WithMany("SubGenres")
                        .HasForeignKey("ParentGenreKey")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ParentGenre");
                });

            modelBuilder.Entity("Infrastructure.Models.RemoteSources", b =>
                {
                    b.HasOne("Infrastructure.Models.Genre", "Genre")
                        .WithOne("RemoteSources")
                        .HasForeignKey("Infrastructure.Models.RemoteSources", "Key")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Infrastructure.Models.Genre", b =>
                {
                    b.Navigation("RemoteSources");

                    b.Navigation("SubGenres");
                });
#pragma warning restore 612, 618
        }
    }
}
